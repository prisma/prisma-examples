name: test
on:
  push:
    paths:
      - javascript/**
      - typescript/**
    branches:
      - latest
      - dev
      - patch-dev
  pull_request:

env:
  CI: 1
  PRISMA_TELEMETRY_INFORMATION: 'prisma-examples test.yaml'
  SLACK_WEBHOOK_URL_FAILING: ${{ secrets.SLACK_WEBHOOK_URL_FAILING }}
  SKIP_PRISMA_VERSION_CHECK: true # Skip Prisma version check in typegraphl-prisma (https://github.com/MichalLytek/typegraphql-prisma/blob/fc7cfa756a60dd6671a902c38f00ee74698a681a/Readme.md#lifting-prisma-version-restriction)

jobs:
  projects-matrix:
    if: github.repository_owner == 'prisma'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - name: install deps
        run: cd .github/scripts && yarn install

      - name: get list of projects as json array
        id: set-matrix
        run: node .github/scripts/get-packages.js

  debug-projects-matrix:
    needs: projects-matrix
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "${{needs.projects-matrix.outputs.matrix}}"
          echo "${{fromJson(needs.projects-matrix.outputs.matrix)}}"

  test:
    needs: projects-matrix
    if: github.repository_owner == 'prisma'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.projects-matrix.outputs.matrix)}}

    services:
      postgres:
        image: postgis/postgis:14-3.1-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testing
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - '5432:5432'

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: test
        run: sh .github/scripts/test-all.sh ./${{ matrix.path }}/package.json

      - name: notify-slack
        if: failure() && (github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/patch-dev' || github.ref == 'refs/heads/latest')
        run: bash .github/scripts/slack-workflow-status.sh ":x:"
