# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Int!
  email: String!
  name: String
  posts: [Post!]
}

type Post {
  id: Int!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  title: String!
  content: String
  published: Boolean
  viewCount: Int!
  author: User
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type Query {
  allUsers: [User!]
  draftsByUser(userUniqueInput: UserUniqueInput!): [Post!]
  postById(id: Float!): Post
  feed(searchString: String, skip: Float, take: Float, orderBy: PostOrderByUpdatedAtInput): [Post!]!
}

input UserUniqueInput {
  id: Float
  email: String
}

input PostOrderByUpdatedAtInput {
  updatedAt: SortOrder!
}

enum SortOrder {
  asc
  desc
}

type Mutation {
  signupUser(data: UserCreateInput!): User!
  createDraft(data: PostCreateInput!, authorEmail: String!): Post!
  incrementPostViewCount(id: Float!): Post!
  togglePublishPost(id: Float!): Post
  deletePost(id: Float!): Post
}

input UserCreateInput {
  email: String!
  name: String
  posts: [PostCreateInput!]
}

input PostCreateInput {
  title: String!
  content: String
}