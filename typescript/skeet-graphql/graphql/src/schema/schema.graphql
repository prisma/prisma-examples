### This file was generated by Nexus Schema
### Do not make changes to this file directly


type ChatRoom {
  chatRoomMessages: [ChatRoomMessage!]!
  createdAt: DateTime!
  id: ID
  maxTokens: Int!
  model: String!
  name: String
  stream: Boolean!
  temperature: Int!
  title: String
  updatedAt: DateTime!
  userChatRooms: [UserChatRoom!]!
}

type ChatRoomEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: ChatRoom
}

type ChatRoomMessage {
  chatRoomId: ID
  content: String!
  createdAt: DateTime!
  id: ID
  role: String!
  updatedAt: DateTime!
  userId: ID
}

type ChatRoomMessageEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: ChatRoomMessage
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  createChatRoom(maxTokens: Int, model: String, name: String, stream: Boolean, systemContent: String, temperature: Int, title: String): ChatRoom
  createChatRoomMessage(chatRoomId: String, content: String, role: String): ChatRoomMessage
  createUser(email: String, iconUrl: String, uid: String, username: String): User
  createUserChatRoom(chatRoomId: Int, userId: Int): UserChatRoom
  deleteChatRoom(id: String): ChatRoom
  deleteChatRoomMessage(id: String): ChatRoomMessage
  deleteUser(id: String): User
  deleteUserChatRoom(id: String): UserChatRoom
  updateChatRoom(id: String, model: String, name: String, stream: Boolean, title: String): ChatRoom
  updateChatRoomMessage(chatRoomId: Int, content: String, id: String, userId: Int): ChatRoomMessage
  updateUser(email: String, iconUrl: String, id: String, uid: String, username: String): User
  updateUserChatRoom(chatRoomId: Int, id: String): UserChatRoom
}

"""An object with a global ID"""
interface Node {
  """The global ID of the object."""
  id: ID
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Query {
  chatRoomConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryChatRoomConnection_Connection
  chatRoomMessageConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String
    chatRoomId: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryChatRoomMessageConnection_Connection
  getChatRoom(id: String): ChatRoom
  getChatRoomMessages(chatRoomId: String): [ChatRoomMessage]
  getUser(id: String): User
  getUserChatRoom(id: String): UserChatRoom
  me: User

  """Fetches an object given its global ID"""
  node(
    """The global ID of an object"""
    id: ID!
  ): Node

  """Fetches objects given their global IDs"""
  nodes(
    """The global IDs of objects"""
    ids: [ID!]!
  ): [Node]!
  postTweet(id: String, text: String): Boolean
  userChatRoomConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryUserChatRoomConnection_Connection
  userConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): QueryUserConnection_Connection
}

type QueryChatRoomConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ChatRoomEdge]

  """Flattened list of ChatRoom type"""
  nodes: [ChatRoom]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type QueryChatRoomMessageConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ChatRoomMessageEdge]

  """Flattened list of ChatRoomMessage type"""
  nodes: [ChatRoomMessage]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type QueryUserChatRoomConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserChatRoomEdge]

  """Flattened list of UserChatRoom type"""
  nodes: [UserChatRoom]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type QueryUserConnection_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserEdge]

  """Flattened list of User type"""
  nodes: [User]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

enum Role {
  ADMIN
  MASTER
  USER
}

type User {
  createdAt: DateTime!
  email: String!
  iconUrl: String
  id: ID
  iv: String
  role: Role
  uid: String!
  updatedAt: DateTime!
  username: String
}

type UserChatRoom {
  chatRoomId: Int!
  createdAt: DateTime!
  id: ID
  updatedAt: DateTime!
  userId: Int!
}

type UserChatRoomEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: UserChatRoom
}

type UserEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: User
}